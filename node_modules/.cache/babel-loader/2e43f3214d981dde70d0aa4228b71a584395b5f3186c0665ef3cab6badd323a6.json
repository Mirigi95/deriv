{"ast":null,"code":"var _jsxFileName = \"/home/mtume/Gava/bima/src/Trade.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport useDerivWebSocket from './websocket';\n\n// Replace with your Deriv API token\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiToken = 'YOUR_DERIV_API_TOKEN';\nconst symbol = 'R_100';\nfunction Trade() {\n  _s();\n  const {\n    tick,\n    error,\n    ws\n  } = useDerivWebSocket(apiToken, symbol);\n  const [lastTick, setLastTick] = useState(null);\n  useEffect(() => {\n    if (tick && lastTick) {\n      const priceChange = tick.quote - lastTick.quote;\n      if (priceChange > 0) {\n        console.log('Price increased, considering buy...');\n        placeOrder('CALL');\n      } else if (priceChange < 0) {\n        console.log('Price decreased, considering sell...');\n        placeOrder('PUT');\n      }\n    }\n    setLastTick(tick);\n  }, [tick]);\n  const placeOrder = contractType => {\n    if (!ws) return;\n    const order = {\n      buy: 1,\n      price: 10,\n      // Amount you want to trade\n      parameters: {\n        amount: 10,\n        // Stake amount\n        basis: 'stake',\n        // Basis\n        contract_type: contractType,\n        // Contract type ('CALL' or 'PUT')\n        currency: 'USD',\n        // Currency\n        duration: 1,\n        // Duration\n        duration_unit: 'm',\n        // Duration unit\n        symbol: symbol // Symbol\n      }\n    };\n    ws.send(JSON.stringify(order));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Deriv Trading Bot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: 'red'\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 19\n      }, this), tick && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Symbol: \", tick.symbol]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Quote: \", tick.quote]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(Trade, \"D5r1lfFpW+YFrjsPW8Pb2YXXL4M=\", false, function () {\n  return [useDerivWebSocket];\n});\n_c = Trade;\nexport default Trade;\nvar _c;\n$RefreshReg$(_c, \"Trade\");","map":{"version":3,"names":["React","useEffect","useState","useDerivWebSocket","jsxDEV","_jsxDEV","apiToken","symbol","Trade","_s","tick","error","ws","lastTick","setLastTick","priceChange","quote","console","log","placeOrder","contractType","order","buy","price","parameters","amount","basis","contract_type","currency","duration","duration_unit","send","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["/home/mtume/Gava/bima/src/Trade.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport useDerivWebSocket from './websocket';\n\n// Replace with your Deriv API token\nconst apiToken = 'YOUR_DERIV_API_TOKEN';\nconst symbol = 'R_100';\n\nfunction Trade() {\n  const { tick, error, ws } = useDerivWebSocket(apiToken, symbol);\n  const [lastTick, setLastTick] = useState(null);\n\n  useEffect(() => {\n    if (tick && lastTick) {\n      const priceChange = tick.quote - lastTick.quote;\n\n      if (priceChange > 0) {\n        console.log('Price increased, considering buy...');\n        placeOrder('CALL');\n      } else if (priceChange < 0) {\n        console.log('Price decreased, considering sell...');\n        placeOrder('PUT');\n      }\n    }\n    setLastTick(tick);\n  }, [tick]);\n\n  const placeOrder = (contractType) => {\n    if (!ws) return;\n\n    const order = {\n      buy: 1,\n      price: 10, // Amount you want to trade\n      parameters: {\n        amount: 10, // Stake amount\n        basis: 'stake', // Basis\n        contract_type: contractType, // Contract type ('CALL' or 'PUT')\n        currency: 'USD', // Currency\n        duration: 1, // Duration\n        duration_unit: 'm', // Duration unit\n        symbol: symbol, // Symbol\n      },\n    };\n\n    ws.send(JSON.stringify(order));\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Deriv Trading Bot</h1>\n        {error && <p style={{ color: 'red' }}>{error}</p>}\n        {tick && (\n          <div>\n            <p>Symbol: {tick.symbol}</p>\n            <p>Quote: {tick.quote}</p>\n          </div>\n        )}\n      </header>\n    </div>\n  );\n}\n\nexport default Trade;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,iBAAiB,MAAM,aAAa;;AAE3C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAG,sBAAsB;AACvC,MAAMC,MAAM,GAAG,OAAO;AAEtB,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC;EAAG,CAAC,GAAGT,iBAAiB,CAACG,QAAQ,EAAEC,MAAM,CAAC;EAC/D,MAAM,CAACM,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,IAAIS,IAAI,IAAIG,QAAQ,EAAE;MACpB,MAAME,WAAW,GAAGL,IAAI,CAACM,KAAK,GAAGH,QAAQ,CAACG,KAAK;MAE/C,IAAID,WAAW,GAAG,CAAC,EAAE;QACnBE,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;QAClDC,UAAU,CAAC,MAAM,CAAC;MACpB,CAAC,MAAM,IAAIJ,WAAW,GAAG,CAAC,EAAE;QAC1BE,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;QACnDC,UAAU,CAAC,KAAK,CAAC;MACnB;IACF;IACAL,WAAW,CAACJ,IAAI,CAAC;EACnB,CAAC,EAAE,CAACA,IAAI,CAAC,CAAC;EAEV,MAAMS,UAAU,GAAIC,YAAY,IAAK;IACnC,IAAI,CAACR,EAAE,EAAE;IAET,MAAMS,KAAK,GAAG;MACZC,GAAG,EAAE,CAAC;MACNC,KAAK,EAAE,EAAE;MAAE;MACXC,UAAU,EAAE;QACVC,MAAM,EAAE,EAAE;QAAE;QACZC,KAAK,EAAE,OAAO;QAAE;QAChBC,aAAa,EAAEP,YAAY;QAAE;QAC7BQ,QAAQ,EAAE,KAAK;QAAE;QACjBC,QAAQ,EAAE,CAAC;QAAE;QACbC,aAAa,EAAE,GAAG;QAAE;QACpBvB,MAAM,EAAEA,MAAM,CAAE;MAClB;IACF,CAAC;IAEDK,EAAE,CAACmB,IAAI,CAACC,IAAI,CAACC,SAAS,CAACZ,KAAK,CAAC,CAAC;EAChC,CAAC;EAED,oBACEhB,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClB9B,OAAA;MAAQ6B,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5B9B,OAAA;QAAA8B,QAAA,EAAI;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzB5B,KAAK,iBAAIN,OAAA;QAAGmC,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAN,QAAA,EAAExB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAChD7B,IAAI,iBACHL,OAAA;QAAA8B,QAAA,gBACE9B,OAAA;UAAA8B,QAAA,GAAG,UAAQ,EAACzB,IAAI,CAACH,MAAM;QAAA;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BlC,OAAA;UAAA8B,QAAA,GAAG,SAAO,EAACzB,IAAI,CAACM,KAAK;QAAA;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CACN;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC9B,EAAA,CArDQD,KAAK;EAAA,QACgBL,iBAAiB;AAAA;AAAAuC,EAAA,GADtClC,KAAK;AAuDd,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}