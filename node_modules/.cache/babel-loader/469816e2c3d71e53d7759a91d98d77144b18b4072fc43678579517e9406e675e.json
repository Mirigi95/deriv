{"ast":null,"code":"var _jsxFileName = \"/home/mtume/Gava/bima/src/Login.js\",\n  _s = $RefreshSig$();\n// src/Login.js\nimport React, { useState } from 'react';\nimport { getAuth, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider, TwitterAuthProvider } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport './Login.css'; // Import CSS file for styling\n\n// Your web app's Firebase configuration\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB6DfUp43ChnaHnAaTUnu_iuREBvk_1k2k\",\n  authDomain: \"twitter-post-8cd34.firebaseapp.com\",\n  databaseURL: \"https://twitter-post-8cd34-default-rtdb.firebaseio.com\",\n  projectId: \"twitter-post-8cd34\",\n  storageBucket: \"twitter-post-8cd34.appspot.com\",\n  messagingSenderId: \"90149246118\",\n  appId: \"1:90149246118:web:449c450c579bfd76fc9067\",\n  measurementId: \"G-QE99RSL9RV\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst Login = ({\n  onLogin\n}) => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const handleEmailLogin = async () => {\n    const auth = getAuth(app);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      onLogin(true);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleGoogleLogin = async () => {\n    const auth = getAuth(app);\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      onLogin(true);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  const handleTwitterLogin = async () => {\n    const auth = getAuth(app);\n    const provider = new TwitterAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      onLogin(true);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"App-header\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-container\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          onClick: handleEmailLogin,\n          children: \"Login with Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          onClick: handleGoogleLogin,\n          children: \"Login with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"login-button\",\n          onClick: handleTwitterLogin,\n          children: \"Login with Twitter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"Mo0y3DcwABf2JuX2Ot7Vabl3QMk=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","getAuth","signInWithEmailAndPassword","signInWithPopup","GoogleAuthProvider","TwitterAuthProvider","initializeApp","jsxDEV","_jsxDEV","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","app","Login","onLogin","_s","email","setEmail","password","setPassword","error","setError","handleEmailLogin","auth","err","message","handleGoogleLogin","provider","handleTwitterLogin","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/home/mtume/Gava/bima/src/Login.js"],"sourcesContent":["// src/Login.js\nimport React, { useState } from 'react';\nimport { getAuth, signInWithEmailAndPassword, signInWithPopup, GoogleAuthProvider, TwitterAuthProvider } from 'firebase/auth';\nimport { initializeApp } from 'firebase/app';\nimport './Login.css'; // Import CSS file for styling\n\n\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyB6DfUp43ChnaHnAaTUnu_iuREBvk_1k2k\",\n  authDomain: \"twitter-post-8cd34.firebaseapp.com\",\n  databaseURL: \"https://twitter-post-8cd34-default-rtdb.firebaseio.com\",\n  projectId: \"twitter-post-8cd34\",\n  storageBucket: \"twitter-post-8cd34.appspot.com\",\n  messagingSenderId: \"90149246118\",\n  appId: \"1:90149246118:web:449c450c579bfd76fc9067\",\n  measurementId: \"G-QE99RSL9RV\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\nconst Login = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const handleEmailLogin = async () => {\n    const auth = getAuth(app);\n    try {\n      await signInWithEmailAndPassword(auth, email, password);\n      onLogin(true);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleGoogleLogin = async () => {\n    const auth = getAuth(app);\n    const provider = new GoogleAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      onLogin(true);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  const handleTwitterLogin = async () => {\n    const auth = getAuth(app);\n    const provider = new TwitterAuthProvider();\n    try {\n      await signInWithPopup(auth, provider);\n      onLogin(true);\n    } catch (err) {\n      setError(err.message);\n    }\n  };\n\n  return (\n    <header className='App-header'>\n    <div className=\"login-container\">\n      <h2>Login</h2>\n      <div className=\"input-container\">\n        <input\n          type=\"email\"\n          placeholder=\"Email\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </div>\n      <div className=\"input-container\">\n        <input\n          type=\"password\"\n          placeholder=\"Password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n      </div>\n      <div className=\"button-container\">\n        <button className=\"login-button\" onClick={handleEmailLogin}>Login with Email</button>\n        <button className=\"login-button\" onClick={handleGoogleLogin}>Login with Google</button>\n        <button className=\"login-button\" onClick={handleTwitterLogin}>Login with Twitter</button>\n      </div>\n      {error && <p className=\"error-message\">{error}</p>}\n    </div>\n    </header>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}